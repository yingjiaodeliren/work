type student struct {
	name  string
	score int
}

func findmax(a []student, n int) int {
	s := n
	for i := n + 1; i < len(a); i++ {
		if a[s].score < a[i].score {
			s = i
		}
	}
	return (s)
}

func sort(a []student) {
	for i := 0; i < len(a); i++ {
		s := findmax(a, i)
		a[i], a[s] = a[s], a[i]
	}
}

func findscore(a []student, name string) (score int, ok bool) {
	for x <- a {
		if x.name == name {
			return x.score, true
		}
	}
	return 0, false
}


func passedNames(a[]student)[]string{
return[x.name for x<-a,x.score>=60]
}

func findscore2(a[]student,name string)(score int,ok bool) {
 return{x.score for x<- a,x.name==name}
 
}



func hasfailed(a[]student)bool{
_,ok:={0 for x<- a,x.score<60}
return ok

}



















a:=[student{"a",66},student{"b",89},student{"c",55}]
sort(a)
println(a)
println(findscore(a, "a"))
println(findscore(a, "c"))
println(passedNames(a))
println(findscore2(a,"a"))
println(hasfailed(a))







